// Mocks generated by Mockito 5.4.4 from annotations
// in yogicast/test/features/podcast/providers/podcast_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:yogicast/core/models/podcast.dart' as _i7;
import 'package:yogicast/core/services/cache_service.dart' as _i6;
import 'package:yogicast/core/services/groq_service.dart' as _i2;
import 'package:yogicast/core/services/replicate_service.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GroqService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroqService extends _i1.Mock implements _i2.GroqService {
  @override
  _i3.Future<String> generatePodcastScript({
    required String? title,
    required String? description,
    required String? content,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generatePodcastScript,
          [],
          {
            #title: title,
            #description: description,
            #content: content,
          },
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generatePodcastScript,
            [],
            {
              #title: title,
              #description: description,
              #content: content,
            },
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generatePodcastScript,
            [],
            {
              #title: title,
              #description: description,
              #content: content,
            },
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<List<String>> generateSegmentScripts({
    required String? mainScript,
    required int? numberOfSegments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateSegmentScripts,
          [],
          {
            #mainScript: mainScript,
            #numberOfSegments: numberOfSegments,
          },
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  _i3.Future<String> generateSegmentDescription(String? segmentContent) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateSegmentDescription,
          [segmentContent],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generateSegmentDescription,
            [segmentContent],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generateSegmentDescription,
            [segmentContent],
          ),
        )),
      ) as _i3.Future<String>);
}

/// A class which mocks [ReplicateService].
///
/// See the documentation for Mockito's code generation for more information.
class MockReplicateService extends _i1.Mock implements _i5.ReplicateService {
  @override
  _i3.Future<String> generateImage({
    required String? prompt,
    int? width = 768,
    int? height = 768,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateImage,
          [],
          {
            #prompt: prompt,
            #width: width,
            #height: height,
          },
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generateImage,
            [],
            {
              #prompt: prompt,
              #width: width,
              #height: height,
            },
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generateImage,
            [],
            {
              #prompt: prompt,
              #width: width,
              #height: height,
            },
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> generateAudio({
    required String? text,
    String? voiceId,
    double? speed,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateAudio,
          [],
          {
            #text: text,
            #voiceId: voiceId,
            #speed: speed,
          },
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generateAudio,
            [],
            {
              #text: text,
              #voiceId: voiceId,
              #speed: speed,
            },
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generateAudio,
            [],
            {
              #text: text,
              #voiceId: voiceId,
              #speed: speed,
            },
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> generatePodcastThumbnail({
    required String? title,
    required String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generatePodcastThumbnail,
          [],
          {
            #title: title,
            #description: description,
          },
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generatePodcastThumbnail,
            [],
            {
              #title: title,
              #description: description,
            },
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generatePodcastThumbnail,
            [],
            {
              #title: title,
              #description: description,
            },
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> generateSegmentVisual({
    required String? content,
    required String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateSegmentVisual,
          [],
          {
            #content: content,
            #description: description,
          },
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generateSegmentVisual,
            [],
            {
              #content: content,
              #description: description,
            },
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #generateSegmentVisual,
            [],
            {
              #content: content,
              #description: description,
            },
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<List<String>> generateSegmentVisuals(
          List<String>? segmentContents) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateSegmentVisuals,
          [segmentContents],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  _i3.Future<List<String>> generateSegmentAudio(List<String>? segments) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateSegmentAudio,
          [segments],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);
}

/// A class which mocks [CacheService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheService extends _i1.Mock implements _i6.CacheService {
  @override
  _i3.Future<void> cachePodcast(_i7.Podcast? podcast) => (super.noSuchMethod(
        Invocation.method(
          #cachePodcast,
          [podcast],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i7.Podcast>> getCachedPodcasts() => (super.noSuchMethod(
        Invocation.method(
          #getCachedPodcasts,
          [],
        ),
        returnValue: _i3.Future<List<_i7.Podcast>>.value(<_i7.Podcast>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i7.Podcast>>.value(<_i7.Podcast>[]),
      ) as _i3.Future<List<_i7.Podcast>>);

  @override
  _i3.Future<void> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
